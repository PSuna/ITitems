<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loginDAO">


	<!-- 로그인 처리를 위한 resultMap -->
	<resultMap id="login" type="egovframework.com.cmm.LoginVO">
		<result property="osLogId" column="OS_LOG_ID"/>
		<result property="osInfo" column="OS_INFO"/>
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="ihidNum" column="ihidNum"/>
		<result property="email" column="email"/>
		<result property="password" column="password"/>
		<result property="userSe" column="userSe"/>
		<result property="orgnztId" column="orgnztId"/>
		<result property="lowerOrgnztId" column="lowerOrgnztId"/>
		<result property="grade" column="grade"/>
		<result property="uniqId" column="uniqId"/>		
		<result property="authorCode" column="authorCode"/>
		<result property="authorNm" column="authorNm"/>
	</resultMap>
	<resultMap id="mobPlayLog" type="egovframework.let.res.uat.uia.service.MobPlayLogVO">
		<result property="playLogId" column="PLAY_LOG_ID"/>
		<result property="playId" column="PLAY_ID"/>
		<result property="os" column="OS"/>
		<result property="model" column="MODEL"/>
		<result property="brand" column="BRAND"/>
		<result property="playDate" column="PLAY_DATE"/>
		<result property="lastPlayDate" column="LAST_PLAY_DATE"/>
	</resultMap>
	

	<select id="insertOsLoginLog">
	INSERT INTO LOGIN_LOG (OS_LOG_ID, UNIQID, LOGIN_DATE, OS_INFO)
	VALUES(#{osLogId},#{uniqId}, SYSDATE(),#{osInfo})
	</select>
	
	<!-- 아이디 찾기를 위한 resultMap 
	<resultMap id="id" class="egovframework.com.cmm.LoginVO">
		<result property="id" column="id" columnIndex="1"/>
	</resultMap>
	-->
	<!-- 비밀번호 처리를 위한 resultMap 
	<resultMap id="password" class="egovframework.com.cmm.LoginVO">
		<result property="password" column="password" columnIndex="1"/>
	</resultMap>
	-->
	<!-- 일반 로그인 -->
	<select id="loginDAO.actionLogin" resultMap="login">
		<if test="userSe == &quot;USR&quot;">
			
            SELECT A.EMPLYR_ID AS id
                 , A.USER_NM AS name
                 , A.PASSWORD AS password
                 , A.IHIDNUM AS ihidNum
                 , A.EMAIL_ADRES AS email
                 , 'USR' AS userSe
	             , CASE
						WHEN D.ORGNZT_UP IS NULL
						THEN D.ORGNZT_ID
						ELSE E.ORGNZT_ID
				   END AS orgnztId
				 , CASE 
						WHEN D.ORGNZT_UP IS NULL
						THEN NULL
						ELSE D.ORGNZT_ID
				   END AS lowerOrgnztId
				 , D.ORGNZT_NM as orgnztNm
                 , A.GRADE as grade
                 , A.ESNTL_ID AS uniqId
                 , B.AUTHOR_CODE AS authorCode
                 , C.AUTHOR_NM AS authorNm
              FROM LETTNEMPLYRINFO A 
   LEFT OUTER JOIN LETTNEMPLYRSCRTYESTBS B
                ON A.ESNTL_ID = B.SCRTY_DTRMN_TRGET_ID
   LEFT OUTER JOIN LETTNAUTHORINFO C
                ON B.AUTHOR_CODE = C.AUTHOR_CODE
   LEFT OUTER JOIN LETTNORGNZTINFO D
                ON A.ORGNZT_ID = D.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO E
                ON D.ORGNZT_UP = E.ORGNZT_ID
             WHERE A.EMPLYR_ID = #{id}
               AND A.PASSWORD = #{password}
               AND A.EMPLYR_STTUS_CODE = 'P'
			
		</if>
	</select>
	
	<select id="selectParsingGrade" resultType="String">
	SELECT B.CODE_NM FROM 
	LETTNEMPLYRINFO A JOIN lettccmmndetailcode B
	ON A.GRADE = B.CODE
	WHERE A.ESNTL_ID=#{uniqId}
	</select>
	
	<insert id="insertPlayLog" parameterType="egovframework.let.res.uat.uia.service.MobPlayLogVO">
	INSERT INTO MOB_PLAY_LOG (PLAY_LOG_ID,
								PLAY_ID,
								OS,
								MODEL,
								BRAND,
								PLAY_DATE
								)
	VALUES (#{playLogId},
			#{playId},
			#{os},
			#{model},
			#{brand},
			SYSDATE()
			)
	</insert>
	
	<select id="isValidPlayLog" resultType="int">
	SELECT COUNT(*) AS count
	FROM MOB_PLAY_LOG
	WHERE PLAY_ID = #{playId}
	</select>
	<update  id="updatePlayLog">
	UPDATE MOB_PLAY_LOG
	SET LAST_PLAY_DATE=SYSDATE()
	WHERE PLAY_ID=#{playId}
	</update>
	
<!-- 	<select id="selectListMobPushToken" parameterType="egovframework.let.res.uat.uia.service.MobPlayLogVO" resultMap="mobPlayLog"> -->
<!-- 	SELECT * FROM mob_push_token -->
<!-- 	WHERE uniqId = #{uniqId} -->
<!-- 	AND token_state='Y' -->
<!-- 	</select> -->
	

	<!-- 인증서 로그인
	<select id="loginDAO.actionCrtfctLogin" resultMap="login">
		<![CDATA[
		SELECT emplyr_id AS id
		     , USER_NM AS name
		     , password AS password
		     , ihidnum AS ihidNum
		     , email_adres AS email
		     , 'USR' AS userSe
		     , orgnzt_id AS orgnztId
		     , ESNTL_ID AS uniqId
		  FROM LETTNEMPLYRINFO
		 WHERE sub_dn = #{dn}
		]]>
	</select>
	 -->
	<!-- 아이디 찾기
	<select id="loginDAO.searchId" resultMap="id">
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT mber_id AS id
			  FROM LETTNGNRLMBER
			 WHERE mber_nm = #{name}
			   AND mber_email_adres = #{email}
			   AND mber_sttus = 'P'
			]]>
		</isEqual>
		<isEqual property="userSe" compareValue="ENT">
			<![CDATA[
			SELECT entrprsmber_id AS id
			  FROM LETTNENTRPRSMBER
			 WHERE cmpny_nm = #{name}
			   AND applcnt_email_adres = #{email}
			   AND entrprs_mber_sttus = 'P'
			]]>
		</isEqual>
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT emplyr_id AS id
			  FROM LETTNEMPLYRINFO
			 WHERE USER_NM = #{name}
			   AND email_adres = #{email}
			   AND emplyr_sttus_code = 'P'
			]]>
		</isEqual>
	</select>
	 -->
	<!-- 비밀번호 찾기 
	<select id="loginDAO.searchPassword" resultMap="password">
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			SELECT password AS password
			  FROM LETTNGNRLMBER
			 WHERE mber_id = #{id}
			   AND mber_nm = #{name}
			   AND mber_email_adres = #{email}
			   AND password_hint = #{passwordHint}
			   AND password_cnsr = #{passwordCnsr}
			   AND mber_sttus = 'P'
			]]>
		</isEqual>
		<isEqual property="userSe" compareValue="ENT">
			<![CDATA[
			SELECT entrprs_mber_password AS password
			  FROM LETTNENTRPRSMBER
			 WHERE entrprsmber_id = #{id}
			   AND cmpny_nm = #{name}
			   AND applcnt_email_adres = #{email}
			   AND entrprs_mber_password_hint = #{passwordHint}
			   AND entrprs_mber_password_cnsr = #{passwordCnsr}
			   AND entrprs_mber_sttus = 'P'
			]]>
		</isEqual>
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			SELECT password AS password
			  FROM LETTNEMPLYRINFO
			 WHERE emplyr_id = #{id}
			   AND USER_NM = #{name}
			   AND email_adres = #{email}
			   AND password_hint = #{passwordHint}
			   AND password_cnsr = #{passwordCnsr}
			   AND emplyr_sttus_code = 'P'
			]]>
		</isEqual>
	</select>
	-->
	<!-- 변경된 비밀번호를 저장 
	<update id="loginDAO.updatePassword">
		<isEqual property="userSe" compareValue="GNR">
			<![CDATA[
			UPDATE LETTNGNRLMBER
			   SET password = #{password}
			 WHERE mber_id = #{id}
			]]>
		</isEqual>
		<isEqual property="userSe" compareValue="ENT">
			<![CDATA[
			UPDATE LETTNENTRPRSMBER
			   SET entrprs_mber_password = #{password}
			 WHERE entrprsmber_id = #{id}
			]]>
		</isEqual>
		<isEqual property="userSe" compareValue="USR">
			<![CDATA[
			UPDATE LETTNEMPLYRINFO
			   SET password = #{password}
			 WHERE emplyr_id = #{id}
			]]>
		</isEqual>
	</update>
	-->
</mapper>