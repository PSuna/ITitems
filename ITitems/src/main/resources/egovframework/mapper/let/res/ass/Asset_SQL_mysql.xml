<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AssetDAO">

	<resultMap type="egovframework.let.res.ass.service.AssetVO"
		id="assetList">
		<result property="mngNum" column="MNG_NUM" />
		<result property="assetId" column="ASSET_ID" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="orgnztNm" column="ORGNZT_NM" />
		<result property="lowerOrgnztNm" column="LOWER_ORGNZT_NM" />
		<result property="prjNm" column="PRJ_NM" />
		<result property="assetSn" column="ASSET_SN" />
		<result property="assetSn" column="ASSET_SN" />
		<result property="maker" column="MAKER" />
		<result property="makerCode" column="MAKER_CODE" /> 
		<result property="rcptNm" column="RCPT_NM" />
		<result property="orgnztNm" column="ORGNZT_NM" />
		<result property="lowerOrgnztNm" column="LOWER_ORGNZT_NM" />
		<result property="useNm" column="USE_NM" />
		<result property="reqDate" column="REQ_DATE" />
	</resultMap>
	
	<resultMap type="egovframework.let.res.ass.service.AssetVO"
		id="myAssetList">
		<result property="mngNum" column="MNG_NUM" />
		<result property="assetId" column="ASSET_ID" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="assetSnNm" column="ASSET_SN_NM" />
		<result property="assetSn" column="ASSET_SN" />
		<result property="prjNm" column="PRJ_NM" />
		<result property="rcptNm" column="RCPT_NM" />
		<result property="useNm" column="USE_NM" />
		<result property="orgnztNm" column="ORGNZT_NM" />
		<result property="lowerOrgnztNm" column="LOWER_ORGNZT_NM" />
	</resultMap>

	<resultMap type="egovframework.let.res.ass.service.AssetVO"
		id="assetDetail">
		<result property="mngNum" column="MNG_NUM" />
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategoryCode" column="LARGE_CATEGORY_CODE" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="mcatNm" column="MCAT_NM" />
		<result property="mcatEtc" column="MCAT_ETC" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="acquiredDate" column="ACQUIRED_DATE" />
		<result property="acquiredPrice" column="ACQUIRED_PRICE" />
		<result property="maker" column="MAKER" />
		<result property="makerCode" column="MAKER_CODE" />
		<result property="note" column="NOTE" />
		<result property="assetSn" column="ASSET_SN" />
		<result property="assetSnNm" column="ASSET_SN_NM" />
		<result property="rcptId" column="RCPT_ID" />
		<result property="rcptNm" column="RCPT_NM" />
		<result property="rcptDate" column="RCPT_DATE" />
		<result property="prjId" column="PRJ_ID" />
		<result property="prjNm" column="PRJ_NM" />
		<result property="orgnztId" column="ORGNZT_ID" />
		<result property="orgnztNm" column="ORGNZT_NM" />
		<result property="useId" column="USE_ID" />
		<result property="useNm" column="USE_NM" />
		<result property="rcptDate" column="RCPT_DATE" />
		<result property="rcptDt" column="RCPT_DT" />
		<result property="assetStart" column="ASSET_START" />
		<result property="assetEnd" column="ASSET_END" />
		<result property="assetCompany" column="ASSET_COMPANY" />
		<result property="useStart" column="USE_START" />
		<result property="useEnd" column="USE_END" />
		<result property="rcptGroup" column="RCPT_GROUP" />
		<result property="useGroup" column="USE_GROUP" />
	</resultMap>
	
	<resultMap type="egovframework.let.res.ass.service.AssetVO"
		id="histList">
		<result property="assetStauts" column="ASSET_STAUTS" />
		<result property="creatDt" column="CREAT_DT" />
		<result property="creatId" column="CREAT_ID" />
	</resultMap>
	
	<resultMap type="egovframework.let.res.ass.service.AssetMasterVO"
		id="assetMaster">
		<result property="assId" column="ASS_ID" />
		<result property="assNm" column="ASS_NM" />
		<result property="frstRegisterId" column="FRST_REGISTER_ID" />
		<result property="frstRegistPnttm" column="FRST_REGIST_PNTTM" />
		<result property="lastUpdusrId" column="LAST_UPDUSR_ID" />
		<result property="lastUpdtPnttm" column="LAST_UPDT_PNTTM" />
	</resultMap>
	
	<sql id="search">
		<where>
			AND A.USAGE_STAUTS != 'C4'
			<if test="searchOrgnzt != null and searchOrgnzt != ''">
              	AND (	A.ORGNZT_ID = #{searchOrgnzt} 
              		OR  F.ORGNZT_UP = #{searchOrgnzt})
            </if>
			<if test="searchName != null and searchName != ''">
				AND (	D.USER_NM LIKE CONCAT ('%', #{searchName},'%') 
					OR  E.USER_NM LIKE CONCAT ('%', #{searchName},'%'))
		 	</if>
            <if test="userId != null and userId != ''">
				AND (	A.RCPT_ID = #{userId} 
				   AND A.RCPT_GROUP = #{userGroup} 
					OR  A.USE_ID = #{userId}
				   AND A.USE_GROUP = #{userGroup} 
					)
            </if>
        	<if test="lowerOrgnzt != null and lowerOrgnzt != ''">
				AND A.ORGNZT_ID = #{lowerOrgnzt}
			</if>
			<if test="searchPrj != null and searchPrj != ''">
				AND A.PRJ_ID = #{searchPrj}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND A.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND A.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
			<if test="searchStatus != null and searchStatus != ''">
				AND A.ASSET_STAUTS = #{searchStatus}
			</if>
			<if test="startDate != null and startDate != ''">
				AND DATE_FORMAT(A.CREAT_DT, '%Y-%m-%d') >= DATE_FORMAT(#{startDate},
				'%Y-%m-%d')
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
				AND DATE_FORMAT(A.CREAT_DT, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')
				]]>
			</if>
			<if test="searchKind == 'out'">
				AND A.ASSET_STAUTS != 'C1'
			</if>
			<if test="searchKind == 'in'">
				AND A.ASSET_STAUTS = 'C1'
			</if>
			<if test="assId != null and assId != ''">
				AND A.ASS_ID = #{assId}
			</if>
		</where>
	</sql>
	
	<sql id="mySearch">
		<where>
			AND A.USAGE_STAUTS != 'C4'
			AND (	A.RCPT_ID = #{userId} 
				OR  A.USE_ID = #{userId})
			<if test="searchWord != null and searchWord != ''">
				AND (	A.ASSET_NAME LIKE CONCAT ('%', #{searchWord},'%') 
					OR  A.ASSET_SN LIKE CONCAT ('%', #{searchWord},'%'))
		 	</if>
			<if test="searchName != null and searchName != ''">
				AND (	D.USER_NM LIKE CONCAT ('%', #{searchName},'%') 
					OR  E.USER_NM LIKE CONCAT ('%', #{searchName},'%'))
		 	</if>
			<if test="searchPrj != null and searchPrj != ''">
				AND A.PRJ_ID = #{searchPrj}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND A.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND A.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
			<if test="startDate != null and startDate != ''">
				AND A.CREAT_DT >= DATE_FORMAT(#{startDate},
				'%Y-%m-%d')
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
				AND DATE_FORMAT(A.CREAT_DT, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')
				]]>
			</if>
			<if test="assId != null and assId != ''">
				AND A.ASS_ID = #{assId}
			</if>
		</where>
	</sql>
	
	<sql id="detailSearch">
		<where>
	         <choose>
				<when test="mngNum != null and mngNum != ''">
					AND A.MNG_NUM =#{mngNum}
				</when>
				<otherwise>
					AND A.MNG_NUM IS NULL
				</otherwise>
			</choose>
       		AND A.ASSET_ID = #{assetId}
       </where> 
	</sql>
	
	<sql id="delReqsearch">
		<where>
	         <choose>
				<when test="mngNum != null and mngNum != ''">
					AND A.MNG_NUM = #{mngNum}
				</when>
				<otherwise>
					AND A.MNG_NUM IS NULL
				</otherwise>
			</choose>
       		AND A.ASSET_ID = #{assetId}
       		AND A.USAGE_STAUTS = 'Y'
       	</where>
	</sql>
	
	<sql id="delreqlistsearch">
		<where>
			AND A.USAGE_STAUTS != 'C4'
			AND B.USAGE_STAUTS = 'Y'
			<if test="searchOrgnzt != null and searchOrgnzt != ''">
              	AND (	A.ORGNZT_ID = #{searchOrgnzt} 
              		OR  F.ORGNZT_UP = #{searchOrgnzt})
            </if>
            <if test="userId != null and userId != ''">
				AND A.CREAT_ID = #{userId}
            </if>
        	<if test="lowerOrgnzt != null and lowerOrgnzt != ''">
				AND A.ORGNZT_ID = #{lowerOrgnzt}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND A.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND A.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
		</where>
	</sql>
	<sql id="mngNumsearch">
		
	</sql>
	
	<sql id="assetSnsearch">
		<where>
			AND A.USAGE_STAUTS != 'C4'
			AND A.ASSET_SN IN (
								SELECT ASSET_SN
							      FROM ASSET
								 WHERE ASSET_SN IS NOT NULL
								   AND ASSET_SN != ""
								   AND USAGE_STAUTS != 'C4'
							  GROUP BY ASSET_SN
								HAVING COUNT(ASSET_SN) > 1)
			<if test="searchOrgnzt != null and searchOrgnzt != ''">
              	AND (	A.ORGNZT_ID = #{searchOrgnzt} 
              		OR  F.ORGNZT_UP = #{searchOrgnzt})
            </if>
			<if test="searchName != null and searchName != ''">
				AND (	D.USER_NM LIKE CONCAT ('%', #{searchName},'%') 
					OR  E.USER_NM LIKE CONCAT ('%', #{searchName},'%'))
		 	</if>
            <if test="userId != null and userId != ''">
				AND A.RCPT_ID = #{userId}
            </if>
        	<if test="lowerOrgnzt != null and lowerOrgnzt != ''">
				AND A.ORGNZT_ID = #{lowerOrgnzt}
			</if>
			<if test="searchPrj != null and searchPrj != ''">
				AND A.PRJ_ID = #{searchPrj}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND A.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND A.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
			<if test="searchStatus != null and searchStatus != ''">
				AND A.ASSET_STAUTS = #{searchStatus}
			</if>
			<if test="startDate != null and startDate != ''">
				AND DATE_FORMAT(A.CREAT_DT, '%Y-%m-%d') >= DATE_FORMAT(#{startDate},
				'%Y-%m-%d')
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
				AND DATE_FORMAT(A.CREAT_DT, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')
				]]>
			</if>
		</where>
	</sql>

	<select id="SelectMyAssetVOList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultMap="myAssetList">
		SELECT
			MNG_NUM, 
			ASSET_ID,
			MIDDLE_CATEGORY, 
			ASSET_NAME, 
			ASSET_SN_NM,
			ASSET_SN,
			PRJ_NM,
			RCPT_NM,
			USE_NM
	      FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM,
				A.ASSET_ID, 
				CASE 
					WHEN B.CAT_NAME = '기타' 
					 AND A.MCAT_ETC IS NOT NULL 
					 AND A.MCAT_ETC != ""
					THEN A.MCAT_ETC
					ELSE B.CAT_NAME
			  END AS MIDDLE_CATEGORY, 
				A.ASSET_NAME,
				CASE 
					WHEN A.ASSET_SN IS NULL
					  OR A.ASSET_SN = ""
					THEN "없음"
					ELSE A.ASSET_SN
				END AS ASSET_SN_NM,
				A.ASSET_SN,
				C.PRJ_NAME AS PRJ_NM,
				CASE 
					WHEN A.RCPT_GROUP = 'USER'
					THEN D.USER_NM
					WHEN A.RCPT_GROUP = 'ORG'
					THEN M.ORGNZT_NM
					WHEN A.RCPT_GROUP = 'PRJ'
					THEN J.PRJ_NAME
					ELSE NULL
				END AS RCPT_NM,
				CASE 
					WHEN A.USE_GROUP = 'USER'
					THEN E.USER_NM
					WHEN A.USE_GROUP = 'ORG'
					THEN K.ORGNZT_NM
					WHEN A.USE_GROUP = 'PRJ'
					THEN L.PRJ_NAME
					ELSE NULL
				END AS USE_NM
			  FROM ASSET A
   LEFT OUTER JOIN CATEGORY B
				ON A.MIDDLE_CATEGORY = B.CAT_ID
   LEFT OUTER JOIN PROJECTS C
	   			ON A.PRJ_ID = C.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON A.RCPT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
	            ON A.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO M
			    ON A.RCPT_ID = M.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS J
			    ON A.RCPT_ID = J.PRJ_ID
   LEFT OUTER JOIN LETTNORGNZTINFO K
			    ON A.USE_ID = K.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS L
			    ON A.USE_ID = L.PRJ_ID
				 <include refid="mySearch" />
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountMyAssetVOList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="int">
		SELECT
			COUNT(P.RUM)
		  FROM (
				SELECT 
					ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
					A.MNG_NUM,
					A.ASSET_ID
				  FROM ASSET A
	   LEFT OUTER JOIN LETTNEMPLYRINFO D
		            ON A.RCPT_ID = D.ESNTL_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO E
		            ON A.USE_ID = E.ESNTL_ID
					 <include refid="mySearch" />
				) P
	</select>

	<select id="SelectAssetVOList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultMap="assetList">
		SELECT 
    		MNG_NUM,
    		ASSET_ID, 
			ORGNZT_NM,
	    	LOWER_ORGNZT_NM,
			PRJ_NM,
			MIDDLE_CATEGORY,
			ASSET_SN_NM,
			ASSET_SN,
			MAKER,
			MAKER_CODE,
			RCPT_NM,
			USE_NM
	      FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM,
				A.ASSET_ID,
				CASE
					WHEN F.ORGNZT_UP IS NULL
					THEN F.ORGNZT_NM
					ELSE G.ORGNZT_NM
			  	END AS ORGNZT_NM,
				CASE 
					WHEN F.ORGNZT_UP IS NULL
					THEN NULL
					ELSE F.ORGNZT_NM
			  	END AS LOWER_ORGNZT_NM,
				C.PRJ_NAME AS PRJ_NM,
				CASE 
					WHEN B.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL AND A.MCAT_ETC != ""
					THEN A.MCAT_ETC
					ELSE B.CAT_NAME
				END AS MIDDLE_CATEGORY,
				CASE 
					WHEN A.ASSET_SN IS NULL
					  OR A.ASSET_SN = ""
					THEN "없음"
					ELSE A.ASSET_SN
				END AS ASSET_SN_NM, 
				A.ASSET_SN,
				CASE 
					WHEN H.CODE_NM = '기타'
					THEN A.MAKER
					ELSE H.CODE_NM  
			 	END AS MAKER, 
				A.MAKER_CODE,
				CASE 
					WHEN A.RCPT_GROUP = 'USER'
					THEN D.USER_NM
					WHEN A.RCPT_GROUP = 'ORG'
					THEN M.ORGNZT_NM
					WHEN A.RCPT_GROUP = 'PRJ'
					THEN J.PRJ_NAME
					ELSE NULL
				END AS RCPT_NM,
				CASE 
					WHEN A.USE_GROUP = 'USER'
					THEN E.USER_NM
					WHEN A.USE_GROUP = 'ORG'
					THEN K.ORGNZT_NM
					WHEN A.USE_GROUP = 'PRJ'
					THEN L.PRJ_NAME
					ELSE NULL
				END AS USE_NM
			  FROM ASSET A
   LEFT OUTER JOIN CATEGORY B
				ON A.MIDDLE_CATEGORY = B.CAT_ID
   LEFT OUTER JOIN PROJECTS C
	   			ON A.PRJ_ID = C.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON A.RCPT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
	            ON A.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO F
				ON A.ORGNZT_ID = F.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO G
				ON F.ORGNZT_UP = G.ORGNZT_ID
   LEFT OUTER JOIN LETTCCMMNDETAILCODE H
			    ON A.MAKER_CODE = H.CODE
   LEFT OUTER JOIN LETTNORGNZTINFO M
			    ON A.RCPT_ID = M.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS J
			    ON A.RCPT_ID = J.PRJ_ID
   LEFT OUTER JOIN LETTNORGNZTINFO K
			    ON A.USE_ID = K.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS L
			    ON A.USE_ID = L.PRJ_ID
				 <include refid="search" />
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountAssetVOList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="int">
		SELECT 
    		COUNT(P.RUM)
	      FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM,
				A.ASSET_ID
			  FROM ASSET A
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON A.RCPT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
	            ON A.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO F
				ON A.ORGNZT_ID = F.ORGNZT_ID
				 <include refid="search" />
		    ) P 
	</select>

	<select id="SelectAssetVO" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultMap="assetDetail">
			SELECT 
				A.MNG_NUM,
				A.ASSET_ID,
				A.LARGE_CATEGORY AS LARGE_CATEGORY_CODE,
				B.CAT_NAME AS LARGE_CATEGORY, 
				A.MIDDLE_CATEGORY, 
				CASE 
					WHEN C.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL AND A.MCAT_ETC != ""
					THEN A.MCAT_ETC
					ELSE C.CAT_NAME
			  END AS MCAT_NM,
				A.MCAT_ETC, 
				A.ASSET_NAME, 
				DATE_FORMAT(A.ACQUIRED_DATE,'%Y-%m-%d') AS ACQUIRED_DATE, 
				A.ACQUIRED_PRICE, 
				CASE 
					WHEN D.CODE_NM = '기타'
					THEN A.MAKER
					ELSE D.CODE_NM  
			  END AS MAKER, 
				A.MAKER_CODE, 
				A.NOTE,
				CASE 
					WHEN A.ASSET_SN IS NULL
					  OR A.ASSET_SN = ""
					THEN "없음"
					ELSE A.ASSET_SN
				END AS ASSET_SN_NM,
				A.ASSET_SN,
				DATE_FORMAT(A.ASSET_START,'%Y-%m-%d') AS ASSET_START, 
				DATE_FORMAT(A.ASSET_END,'%Y-%m-%d') AS ASSET_END, 
				A.RCPT_ID,
				CASE 
					WHEN A.RCPT_GROUP = 'USER'
					THEN E.USER_NM
					WHEN A.RCPT_GROUP = 'ORG'
					THEN M.ORGNZT_NM
					WHEN A.RCPT_GROUP = 'PRJ'
					THEN J.PRJ_NAME
					ELSE NULL
				END AS RCPT_NM,
				A.RCPT_GROUP,
				A.PRJ_ID,
				F.PRJ_NAME AS PRJ_NM,
				CASE 
					WHEN A.PRJ_ID != 'prj00'
					THEN F.PRJ_START
					ELSE NULL
				END AS USE_START,
				CASE 
					WHEN A.PRJ_ID != 'prj00'
					THEN F.PRJ_END
					ELSE NULL
				END AS USE_END,
				A.ORGNZT_ID,
				H.ORGNZT_NM AS ORGNZT_NM,
				CASE 
					WHEN A.USE_GROUP = 'USER'
					THEN G.USER_NM
					WHEN A.USE_GROUP = 'ORG'
					THEN K.ORGNZT_NM
					WHEN A.USE_GROUP = 'PRJ'
					THEN L.PRJ_NAME
					ELSE NULL
				END AS USE_NM,
				A.USE_GROUP,
				A.USE_ID,
				CASE 
					WHEN A.RCPT_DATE IS NULL
					THEN "모름"
					ELSE DATE_FORMAT(A.RCPT_DATE,'%Y-%m-%d')
				END AS RCPT_DT,
				DATE_FORMAT(A.RCPT_DATE,'%Y-%m-%d') AS RCPT_DATE,
				A.ASSET_COMPANY
			  FROM ASSET A
   LEFT OUTER JOIN CATEGORY B
	   			ON A.LARGE_CATEGORY = B.CAT_ID
   LEFT OUTER JOIN CATEGORY C
	   			ON A.MIDDLE_CATEGORY = C.CAT_ID   
   LEFT OUTER JOIN LETTCCMMNDETAILCODE D
			    ON A.MAKER_CODE = D.CODE   
   LEFT OUTER JOIN LETTNEMPLYRINFO E
			    ON A.RCPT_ID = E.ESNTL_ID
   LEFT OUTER JOIN PROJECTS F
	   			ON A.PRJ_ID = F.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO G
	            ON A.USE_ID = G.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO H
				ON A.ORGNZT_ID = H.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO M
			    ON A.RCPT_ID = M.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS J
			    ON A.RCPT_ID = J.PRJ_ID
   LEFT OUTER JOIN LETTNORGNZTINFO K
			    ON A.USE_ID = K.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS L
			    ON A.USE_ID = L.PRJ_ID
	        <include refid="detailSearch" />
	</select>
	
	<select id="SelectAssetHistList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultMap="histList">
			SELECT
				B.CODE_NM AS ASSET_STAUTS,
				DATE_FORMAT(A.CREAT_DT,'%Y-%m-%d %H:%i:%s') AS CREAT_DT,
				C.USER_NM AS CREAT_ID
			  FROM ASSETHISTORY A	
   LEFT OUTER JOIN LETTCCMMNDETAILCODE B
				ON A.ASSET_STAUTS = B.CODE
   LEFT OUTER JOIN LETTNEMPLYRINFO C
				ON A.CREAT_ID = C.ESNTL_ID
				<include refid="detailSearch" />
			ORDER BY A.CREAT_DT DESC
	</select>
	
	<select id="CountAssetHistList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="int" >
		  	
		  SELECT
				COUNT(P.RUM)
			FROM (
				SELECT
					ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
					A.MNG_NUM,
					A.ASSET_ID
					FROM ASSETHISTORY A	
					<include refid="detailSearch" />
			   ) P
	</select>

	<insert id="InsertAsset" parameterType="egovframework.let.res.ass.service.AssetVO">
		INSERT INTO ASSET (
			<if test="mngNum != null and mngNum != ''">
			MNG_NUM,
			</if>
			ASSET_ID,
			ASS_ID,
			ASSET_STAUTS,
			USAGE_STAUTS,
			CREAT_DT,
			LARGE_CATEGORY,
			MIDDLE_CATEGORY,
			MCAT_ETC,
			PRJ_ID,
			RCPT_ID,
			RCPT_GROUP,
			USE_ID,
			USE_GROUP,
			ORGNZT_ID,
			ASSET_NAME,
			ASSET_SN,
			<if test="acquiredDate != null and acquiredDate != ''">
			ACQUIRED_DATE,
			</if>
			<if test="assetStart != null and assetStart != ''">
			ASSET_START,
			</if>
			<if test="assetEnd != null and assetEnd != ''">
			ASSET_END,
			</if>
			MAKER,
			MAKER_CODE,
			<if test="rcptDate != null and rcptDate != ''">
			RCPT_DATE,
			</if>
			NOTE,
			ASSET_COMPANY
			)
		VALUES (
			<if test="mngNum != null and mngNum != ''">
			#{mngNum},
			</if>
			#{assetId},
			#{assId},
			#{assetStauts},
			#{usageStauts},
			DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'),
			#{largeCategory},
			#{middleCategory},
			#{mcatEtc},
			#{prjId},
			#{rcptId},
			#{rcptGroup},
			#{useId},
			#{useGroup},
			#{orgnztId},
			#{assetName},
			#{assetSn},
			<if test="acquiredDate != null and acquiredDate != ''">
			DATE_FORMAT(#{acquiredDate}, '%Y-%m-%d'),
			</if>
			<if test="assetStart != null and assetStart != ''">
			DATE_FORMAT(#{assetStart}, '%Y-%m-%d'),
			</if>
			<if test="assetEnd != null and assetEnd != ''">
			DATE_FORMAT(#{assetEnd}, '%Y-%m-%d'),
			</if>
			#{maker},
			#{makerCode},
			<if test="rcptDate != null and rcptDate != ''">
			DATE_FORMAT(#{rcptDate}, '%Y-%m-%d'),
			</if>
			#{note},
			#{assetCompany}
		)
	</insert>
	
	<insert id="InsertAssethist" parameterType="egovframework.let.res.ass.service.AssetVO">
		 INSERT INTO ASSETHISTORY (
			<if test="mngNum != null and mngNum != ''">
			MNG_NUM,
			</if>
			ASSET_ID,
			ASSET_STAUTS,
			USAGE_STAUTS,
			CREAT_DT,
			LARGE_CATEGORY,
			MIDDLE_CATEGORY,
			MCAT_ETC,
			PRJ_ID,
			RCPT_ID,
			RCPT_GROUP,
			USE_ID,
			USE_GROUP,
			ORGNZT_ID,
			ASSET_NAME,
			ASSET_SN,
			<if test="acquiredDate != null and acquiredDate != ''">
			ACQUIRED_DATE,
			</if>
			<if test="assetStart != null and assetStart != ''">
			ASSET_START,
			</if>
			<if test="assetEnd != null and assetEnd != ''">
			ASSET_END,
			</if>
			ACQUIRED_PRICE,
			MAKER,
			MAKER_CODE,
			NOTE,
			<if test="rcptDate != null and rcptDate != ''">
			RCPT_DATE,
			</if>
			ASSET_COMPANY,
			CREAT_ID
			)
		VALUES (
			<if test="mngNum != null and mngNum != ''">
			#{mngNum},
			</if>
			#{assetId},
			#{assetStauts},
			#{usageStauts},
			DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'),
			#{largeCategory},
			#{middleCategory},
			#{mcatEtc},
			#{prjId},
			#{rcptId},
			#{rcptGroup},
			#{useId},
			#{useGroup},
			#{orgnztId},
			#{assetName},
			#{assetSn},
			<if test="acquiredDate != null and acquiredDate != ''">
			DATE_FORMAT(#{acquiredDate}, '%Y-%m-%d'),
			</if>
			<if test="assetStart != null and assetStart != ''">
			DATE_FORMAT(#{assetStart}, '%Y-%m-%d'),
			</if>
			<if test="assetEnd != null and assetEnd != ''">
			DATE_FORMAT(#{assetEnd}, '%Y-%m-%d'),
			</if>
			#{acquiredPrice},
			#{maker},
			#{makerCode},
			#{note},
			<if test="rcptDate != null and rcptDate != ''">
			DATE_FORMAT(#{rcptDate}, '%Y-%m-%d'),
			</if>
			#{assetCompany},
			#{creatId}
		)
	</insert>
	
	<update id="UpdateAsset" parameterType="egovframework.let.res.ass.service.AssetVO">
		UPDATE ASSET A
		   SET
				ASSET_STAUTS = #{assetStauts},
				USAGE_STAUTS = #{usageStauts},
				MIDDLE_CATEGORY = #{middleCategory},
				MCAT_ETC = #{mcatEtc},
				PRJ_ID = #{prjId},
				RCPT_ID = #{rcptId},
				RCPT_GROUP = #{rcptGroup},
				USE_ID = #{useId},
				USE_GROUP = #{useGroup},
				ORGNZT_ID = #{orgnztId},
				ASSET_NAME = #{assetName},
				ASSET_SN = #{assetSn},
				<choose>
					<when test="acquiredDate != null and acquiredDate != ''">
						ACQUIRED_DATE = DATE_FORMAT(#{acquiredDate}, '%Y-%m-%d'),
					</when>
					<otherwise>
						ACQUIRED_DATE = NULL,
					</otherwise>
				</choose>
				<choose>
					<when test="assetStart != null and assetStart != ''">
						ASSET_START = DATE_FORMAT(#{assetStart}, '%Y-%m-%d'),
					</when>
					<otherwise>
						ASSET_START = NULL,
					</otherwise>
				</choose>
				<choose>
					<when test="assetEnd != null and assetEnd != ''">
						ASSET_END = DATE_FORMAT(#{assetEnd}, '%Y-%m-%d'),
					</when>
					<otherwise>
						ASSET_END = NULL,
					</otherwise>
				</choose>
				ACQUIRED_PRICE = #{acquiredPrice},
				MAKER = #{maker},
				MAKER_CODE = #{makerCode},
				<choose>
					<when test="rcptDate != null and rcptDate != ''">
						RCPT_DATE = DATE_FORMAT(#{rcptDate}, '%Y-%m-%d'),
					</when>
					<otherwise>
						RCPT_DATE = NULL,
					</otherwise>
				</choose>
				ASSET_COMPANY = #{assetCompany},
				NOTE = #{note}
		<include refid="detailSearch" />	
	</update>
	
	<update id="UpdateAssetDel" parameterType="egovframework.let.res.ass.service.AssetVO">
		UPDATE ASSET A
		   SET 
		   		USAGE_STAUTS = #{usageStauts},
		   		ASSET_STAUTS = #{assetStauts}
		 <include refid="detailSearch" />
	</update>
	
	<select id="CountMngNum" parameterType="egovframework.let.res.ass.service.AssetVO" resultType="int">
		SELECT
				COUNT(P.RUM)
			FROM (
				SELECT
					ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
					A.MNG_NUM,
					A.ASSET_ID
					FROM ASSET A	
					WHERE A.MNG_NUM = #{newMngNum}
			   ) P
	</select>
	
	<update id="UpdateAssetMngNum" parameterType="egovframework.let.res.ass.service.AssetVO">
		UPDATE ASSET A
		   SET 
		   		A.MNG_NUM = #{newMngNum}
		 <include refid="detailSearch" />;
		
		UPDATE ASSETHISTORY A
		   SET 
		   		A.MNG_NUM = #{newMngNum}
		 <include refid="detailSearch" />;
		 
		 UPDATE ASSETREQ A
		   SET 
		   		A.MNG_NUM = #{newMngNum}
		 <include refid="detailSearch" />;
	</update>
	
	<select id="CountdeleteReq" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="int" >
		SELECT
			COUNT(A.ASSET_ID)
		FROM ASSETREQ A
		<include refid="delReqsearch" />
	</select>
	
	<insert id="InsertdeleteReq" parameterType="egovframework.let.res.ass.service.AssetVO">
		INSERT ASSETREQ (
			MNG_NUM, 
			ASSET_ID, 
			CREAT_ID, 
			REQ_GROUP, 
			REQ_DATE,  
			USAGE_STAUTS)
		VALUES (
			<choose>
				<when test="mngNum != null and mngNum != ''">
				#{mngNum},
				</when>
				<otherwise>
				NULL,
				</otherwise>
			</choose>
			#{assetId},
			#{creatId},
			#{reqGroup},
			DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'),
			'Y'
		)
	</insert>
	
	<update id="UpdatedeleteReq" parameterType="egovframework.let.res.ass.service.AssetVO">
		UPDATE ASSETREQ A
		   SET
	   		A.USAGE_STAUTS = #{usageStauts}
			<include refid="delReqsearch" />
	</update>
	
	<select id="xlsxTrsfAssetList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="egovMap">
		SELECT 
				IFNULL(MNG_NUM, '') MNG_NUM,
				IFNULL(ORGNZT_NM, '') ORGNZT_NM,
				IFNULL(PRJ_NM, '') PRJ_NM,
				IFNULL(ASSET_NAME, '') ASSET_NM,
				IFNULL(ASSET_SN_NM, '') ASSET_SN,
				IFNULL(MIDDLE_CATEGORY, '') CATEGORY,
				IFNULL(RCPT_NM, '') RCPT_NM,
				IFNULL(USE_NM, '') USE_NM,
				IFNULL(ASSET_STATUS, '' ) ASSET_STATUS,
				IFNULL(CREATE_DT, '') CREATE_DT,
				IFNULL(ASSET_START, '') ASSET_START,
				IFNULL(ASSET_END, '') ASSET_END,
				IFNULL(ACQUIRED_PRICE, '') ACQUIRED_PRICE,
				IFNULL(MAKER, '') MAKER,
				IFNULL(NOTE, '') NOTE,
				IFNULL(RCPT_DATE, '') RCPT_DATE,
				IFNULL(ASSET_COMPANY, '') ASSET_COMPANY
		  FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM AS MNG_NUM,
				CASE
					WHEN F.ORGNZT_UP IS NULL
					THEN F.ORGNZT_NM
					ELSE G.ORGNZT_NM
			  	END AS ORGNZT_NM,
				C.PRJ_NAME AS PRJ_NM,
				CASE 
					WHEN B.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL
					THEN A.MCAT_ETC
					ELSE B.CAT_NAME
				END AS MIDDLE_CATEGORY, 
				A.ASSET_NAME,
				CASE 
					WHEN A.ASSET_SN IS NULL
					  OR A.ASSET_SN = ""
					THEN "없음"
					ELSE A.ASSET_SN
				END AS ASSET_SN_NM,
				CASE 
					WHEN A.RCPT_GROUP = 'USER'
					THEN D.USER_NM
					WHEN A.RCPT_GROUP = 'ORG'
					THEN M.ORGNZT_NM
					WHEN A.RCPT_GROUP = 'PRJ'
					THEN J.PRJ_NAME
					ELSE NULL
				END AS RCPT_NM,
				CASE 
					WHEN A.USE_GROUP = 'USER'
					THEN E.USER_NM
					WHEN A.USE_GROUP = 'ORG'
					THEN K.ORGNZT_NM
					WHEN A.USE_GROUP = 'PRJ'
					THEN L.PRJ_NAME
					ELSE NULL
				END AS USE_NM,
				H.CODE_NM AS ASSET_STATUS,
				A.CREAT_DT AS CREATE_DT,
				CASE
					WHEN A.ASSET_START IS NULL
					THEN '없음'
					ELSE A.ASSET_START
			  	END AS ASSET_START,
			  	CASE
					WHEN A.ASSET_END IS NULL
					THEN '없음'
					ELSE A.ASSET_END
			  	END AS ASSET_END,
			  	A.ACQUIRED_PRICE,
			  	CASE 
					WHEN I.CODE_NM = '기타'
					THEN A.MAKER
					ELSE I.CODE_NM  
			    END AS MAKER, 
			    A.NOTE AS NOTE,
			    CASE 
					WHEN A.RCPT_DATE IS NULL
					THEN "모름"
					ELSE DATE_FORMAT(A.RCPT_DATE,'%Y-%m-%d')
				END AS RCPT_DATE,
			    A.ASSET_COMPANY AS ASSET_COMPANY
			  FROM ASSET A
   LEFT OUTER JOIN CATEGORY B
				ON A.MIDDLE_CATEGORY = B.CAT_ID
   LEFT OUTER JOIN PROJECTS C
	   			ON A.PRJ_ID = C.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON A.RCPT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
	            ON A.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO F
				ON A.ORGNZT_ID = F.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO G
				ON F.ORGNZT_UP = G.ORGNZT_ID
   LEFT OUTER JOIN LETTCCMMNDETAILCODE H
   				ON A.ASSET_STAUTS = H.CODE
   LEFT OUTER JOIN LETTCCMMNDETAILCODE I
   				ON A.MAKER_CODE = I.CODE
   LEFT OUTER JOIN LETTNORGNZTINFO M
			    ON A.RCPT_ID = M.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS J
			    ON A.RCPT_ID = J.PRJ_ID
   LEFT OUTER JOIN LETTNORGNZTINFO K
			    ON A.USE_ID = K.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS L
			    ON A.USE_ID = L.PRJ_ID
				 <include refid="search" />
		    ) P 
	    <!-- WHERE P.RUM BETWEEN #{first} AND #{last} -->
	</select>
	
	<select id="xlsxTrsfMyAssList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="egovMap">
		SELECT 
				IFNULL(MNG_NUM, '') MNG_NUM,
				IFNULL(ORGNZT_NM, '') ORGNZT_NM,
				IFNULL(PRJ_NM, '') PRJ_NM,
				IFNULL(ASSET_NAME, '') ASSET_NM,
				IFNULL(ASSET_SN_NM, '') ASSET_SN,
				IFNULL(MIDDLE_CATEGORY, '') CATEGORY,
				IFNULL(RCPT_NM, '') RCPT_NM,
				IFNULL(USE_NM, '') USE_NM,
				IFNULL(ASSET_STATUS, '' ) ASSET_STATUS,
				IFNULL(CREATE_DT, '') CREATE_DT,
				IFNULL(ASSET_START, '') ASSET_START,
				IFNULL(ASSET_END, '') ASSET_END,
				IFNULL(ACQUIRED_PRICE, '') ACQUIRED_PRICE,
				IFNULL(MAKER, '') MAKER,
				IFNULL(NOTE, '') NOTE,
				IFNULL(RCPT_DATE, '') RCPT_DATE,
				IFNULL(ASSET_COMPANY, '') ASSET_COMPANY
		  FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM AS MNG_NUM,
				CASE
					WHEN F.ORGNZT_UP IS NULL
					THEN F.ORGNZT_NM
					ELSE G.ORGNZT_NM
			  	END AS ORGNZT_NM,
				C.PRJ_NAME AS PRJ_NM,
				CASE 
					WHEN B.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL
					THEN A.MCAT_ETC
					ELSE B.CAT_NAME
				END AS MIDDLE_CATEGORY, 
				A.ASSET_NAME,
				CASE 
					WHEN A.ASSET_SN IS NULL
					  OR A.ASSET_SN = ""
					THEN "없음"
					ELSE A.ASSET_SN
				END AS ASSET_SN_NM,
				CASE 
					WHEN A.RCPT_GROUP = 'USER'
					THEN D.USER_NM
					WHEN A.RCPT_GROUP = 'ORG'
					THEN M.ORGNZT_NM
					WHEN A.RCPT_GROUP = 'PRJ'
					THEN J.PRJ_NAME
					ELSE NULL
				END AS RCPT_NM,
				CASE 
					WHEN A.USE_GROUP = 'USER'
					THEN E.USER_NM
					WHEN A.USE_GROUP = 'ORG'
					THEN K.ORGNZT_NM
					WHEN A.USE_GROUP = 'PRJ'
					THEN L.PRJ_NAME
					ELSE NULL
				END AS USE_NM,
				H.CODE_NM AS ASSET_STATUS,
				A.CREAT_DT AS CREATE_DT,
				CASE
					WHEN A.ASSET_START IS NULL
					THEN '없음'
					ELSE A.ASSET_START
			  	END AS ASSET_START,
			  	CASE
					WHEN A.ASSET_END IS NULL
					THEN '없음'
					ELSE A.ASSET_END
			  	END AS ASSET_END,
			  	A.ACQUIRED_PRICE,
			  	CASE 
					WHEN I.CODE_NM = '기타'
					THEN A.MAKER
					ELSE I.CODE_NM  
			    END AS MAKER, 
			    A.NOTE AS NOTE,
			    CASE 
					WHEN A.RCPT_DATE IS NULL
					THEN "모름"
					ELSE DATE_FORMAT(A.RCPT_DATE,'%Y-%m-%d')
				END AS RCPT_DATE,
			    A.ASSET_COMPANY AS ASSET_COMPANY
			  FROM ASSET A
   LEFT OUTER JOIN CATEGORY B
				ON A.MIDDLE_CATEGORY = B.CAT_ID
   LEFT OUTER JOIN PROJECTS C
	   			ON A.PRJ_ID = C.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON A.RCPT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
	            ON A.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO F
				ON A.ORGNZT_ID = F.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO G
				ON F.ORGNZT_UP = G.ORGNZT_ID
   LEFT OUTER JOIN LETTCCMMNDETAILCODE H
   				ON A.ASSET_STAUTS = H.CODE
   LEFT OUTER JOIN LETTCCMMNDETAILCODE I
   				ON A.MAKER_CODE = I.CODE
   LEFT OUTER JOIN LETTNORGNZTINFO M
			    ON A.RCPT_ID = M.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS J
			    ON A.RCPT_ID = J.PRJ_ID
   LEFT OUTER JOIN LETTNORGNZTINFO K
			    ON A.USE_ID = K.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS L
			    ON A.USE_ID = L.PRJ_ID
				 <include refid="mySearch" />
		    ) P 
	    <!-- WHERE P.RUM BETWEEN #{first} AND #{last} -->
	</select>
	
	<!-- 모바일용 -->
		<!-- 모바일 내자산조회 리스트 매퍼 -->
		<select id="MobSelectMyAssetInfoList" parameterType="egovframework.let.res.ass.service.AssetManageVO"
		resultMap="myAssetList">
	    SELECT
			MNG_NUM,
			ASSET_ID,
			ORGNZT_NM,
	    	LOWER_ORGNZT_NM,
			MIDDLE_CATEGORY,
			ASSET_NAME, 
			ASSET_SN,
			PRJ_NM,
			RCPT_NM,
			USE_NM
	      FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM,
			    A.ASSET_ID,
				CASE 
					WHEN B.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL
					THEN A.MCAT_ETC
					ELSE B.CAT_NAME
			  END AS MIDDLE_CATEGORY, 
				A.ASSET_NAME, 
				CASE 
					WHEN A.ASSET_SN IS NULL
					  OR A.ASSET_SN = ""
					THEN "없음"
					ELSE A.ASSET_SN
				END AS ASSET_SN,
				C.PRJ_NAME AS PRJ_NM,
				CASE 
					WHEN A.RCPT_GROUP = 'USER'
					THEN D.USER_NM
					WHEN A.RCPT_GROUP = 'ORG'
					THEN M.ORGNZT_NM
					WHEN A.RCPT_GROUP = 'PRJ'
					THEN J.PRJ_NAME
					ELSE NULL
				END AS RCPT_NM,
				CASE 
					WHEN A.USE_GROUP = 'USER'
					THEN E.USER_NM
					WHEN A.USE_GROUP = 'ORG'
					THEN K.ORGNZT_NM
					WHEN A.USE_GROUP = 'PRJ'
					THEN L.PRJ_NAME
					ELSE NULL
				END AS USE_NM,
				CASE
					WHEN F.ORGNZT_UP IS NULL
					THEN F.ORGNZT_NM
					ELSE G.ORGNZT_NM
			  END AS ORGNZT_NM,
				CASE 
					WHEN F.ORGNZT_UP IS NULL
					THEN NULL
					ELSE F.ORGNZT_NM
			  END AS LOWER_ORGNZT_NM
			  FROM ASSET A
   LEFT OUTER JOIN CATEGORY B
				ON A.MIDDLE_CATEGORY = B.CAT_ID
   LEFT OUTER JOIN PROJECTS C
	   			ON A.PRJ_ID = C.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON A.RCPT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
	            ON A.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO F
				ON A.ORGNZT_ID = F.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO G
				ON F.ORGNZT_UP = G.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO M
			    ON A.RCPT_ID = M.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS J
			    ON A.RCPT_ID = J.PRJ_ID
   LEFT OUTER JOIN LETTNORGNZTINFO K
			    ON A.USE_ID = K.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS L
			    ON A.USE_ID = L.PRJ_ID
				 <include refid="mySearch" />
		    ) P 
	</select>

	<select id="MobSelectAssetInfoVOList"
		parameterType="egovframework.let.res.ass.service.AssetManageVO"
		resultMap="assetList">
	   SELECT 
    		MNG_NUM, 
    		ASSET_ID,
			ORGNZT_NM,
	    	LOWER_ORGNZT_NM, 
			PRJ_NM,
			MIDDLE_CATEGORY,
			ASSET_SN,
			MAKER,
			RCPT_NM,
			USE_NM
	      FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM,
				A.ASSET_ID,
				CASE
					WHEN F.ORGNZT_UP IS NULL
					THEN F.ORGNZT_NM
					ELSE G.ORGNZT_NM
			  END AS ORGNZT_NM,
				CASE 
					WHEN F.ORGNZT_UP IS NULL
					THEN NULL
					ELSE F.ORGNZT_NM
			  END AS LOWER_ORGNZT_NM,
				C.PRJ_NAME AS PRJ_NM,
				CASE 
					WHEN B.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL
					THEN A.MCAT_ETC
					ELSE B.CAT_NAME
				END AS MIDDLE_CATEGORY,
				CASE 
					WHEN A.ASSET_SN IS NULL
					  OR A.ASSET_SN = ""
					THEN "없음"
					ELSE A.ASSET_SN
				END AS ASSET_SN,
				A.MAKER,
				CASE 
					WHEN A.RCPT_GROUP = 'USER'
					THEN D.USER_NM
					WHEN A.RCPT_GROUP = 'ORG'
					THEN M.ORGNZT_NM
					WHEN A.RCPT_GROUP = 'PRJ'
					THEN J.PRJ_NAME
					ELSE NULL
				END AS RCPT_NM,
				CASE 
					WHEN A.USE_GROUP = 'USER'
					THEN E.USER_NM
					WHEN A.USE_GROUP = 'ORG'
					THEN K.ORGNZT_NM
					WHEN A.USE_GROUP = 'PRJ'
					THEN L.PRJ_NAME
					ELSE NULL
				END AS USE_NM
			  FROM ASSET A
   LEFT OUTER JOIN CATEGORY B
				ON A.MIDDLE_CATEGORY = B.CAT_ID
   LEFT OUTER JOIN PROJECTS C
	   			ON A.PRJ_ID = C.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON A.RCPT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
	            ON A.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO F
				ON A.ORGNZT_ID = F.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO G
				ON F.ORGNZT_UP = G.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO M
			    ON A.RCPT_ID = M.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS J
			    ON A.RCPT_ID = J.PRJ_ID
   LEFT OUTER JOIN LETTNORGNZTINFO K
			    ON A.USE_ID = K.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS L
			    ON A.USE_ID = L.PRJ_ID
				 <include refid="search" />
		    ) P 
	</select>

	<select id="SelectAssetMaster" parameterType="egovframework.let.res.ass.service.AssetManageVO"
		resultMap="assetMaster">
		SELECT 
			ASS_ID,
			ASS_NM,
			FRST_REGISTER_ID,
			FRST_REGIST_PNTTM,
			LAST_UPDUSR_ID,
			LAST_UPDT_PNTTM
		 FROM ASSETMASTER
		WHERE ASS_ID = #{assId}
	</select>
	<update id="updateAssetStatus" parameterType="egovframework.let.res.ass.service.AssetVO">
		UPDATE ASSET A
		   SET 
		   		USAGE_STAUTS = #{usageStauts},
		   		ASSET_STAUTS = #{assetStauts},
		   		PRJ_ID = #{prjId}
		 WHERE ASSET_ID = #{assetId}
	</update>
	
	<select id="SelectMngNumList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultMap="assetList">
		
	</select>
	
	<select id="CountMngNumList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="int">
	
	</select>
	
	<select id="SelectAssetSnList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultMap="assetList">
		SELECT
			MNG_NUM, 
			ASSET_ID,
			MIDDLE_CATEGORY, 
			ASSET_NAME, 
			ASSET_SN,
			PRJ_NM,
			RCPT_NM,
			USE_NM
	      FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM,
				A.ASSET_ID, 
				CASE 
					WHEN B.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL
					THEN A.MCAT_ETC
					ELSE B.CAT_NAME
			  END AS MIDDLE_CATEGORY, 
				A.ASSET_NAME, 
				A.ASSET_SN,
				C.PRJ_NAME AS PRJ_NM,
				CASE 
					WHEN A.RCPT_GROUP = 'USER'
					THEN D.USER_NM
					WHEN A.RCPT_GROUP = 'ORG'
					THEN M.ORGNZT_NM
					WHEN A.RCPT_GROUP = 'PRJ'
					THEN J.PRJ_NAME
					ELSE NULL
				END AS RCPT_NM,
				CASE 
					WHEN A.USE_GROUP = 'USER'
					THEN E.USER_NM
					WHEN A.USE_GROUP = 'ORG'
					THEN K.ORGNZT_NM
					WHEN A.USE_GROUP = 'PRJ'
					THEN L.PRJ_NAME
					ELSE NULL
				END AS USE_NM
			  FROM ASSET A
   LEFT OUTER JOIN CATEGORY B
				ON A.MIDDLE_CATEGORY = B.CAT_ID
   LEFT OUTER JOIN PROJECTS C
	   			ON A.PRJ_ID = C.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON A.RCPT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
	            ON A.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO M
			    ON A.RCPT_ID = M.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS J
			    ON A.RCPT_ID = J.PRJ_ID
   LEFT OUTER JOIN LETTNORGNZTINFO K
			    ON A.USE_ID = K.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS L
			    ON A.USE_ID = L.PRJ_ID
				 <include refid="assetSnsearch" />
		  ORDER BY A.ASSET_SN
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountAssetSnList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="int">
			SELECT 
		    		COUNT(P.RUM)
			      FROM (
					SELECT 
						ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
						A.MNG_NUM,
						A.ASSET_ID
					  FROM ASSET A
		   LEFT OUTER JOIN LETTNEMPLYRINFO D
			            ON A.RCPT_ID = D.ESNTL_ID
		   LEFT OUTER JOIN LETTNEMPLYRINFO E
			            ON A.USE_ID = E.ESNTL_ID
		   LEFT OUTER JOIN LETTNORGNZTINFO F
						ON A.ORGNZT_ID = F.ORGNZT_ID
						 <include refid="assetSnsearch" />
				    ) P 
	</select>
	
	<select id="SelectAssetSn" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="int">
		SELECT COUNT(ASSET_SN)
		  FROM ASSET
		 WHERE ASSET_SN = #{assetSn}
		   AND USAGE_STAUTS != 'C4'
	</select>

	<select id="InsertExcelAsset" parameterType="egovframework.let.res.ass.service.AssetVO" statementType="CALLABLE" resultType="egovframework.let.res.ass.service.AssetVO">
		CALL ASSETEXCELINSERT(#{assetId}, 
							  #{assId}, 
							  #{assetStauts}, 
							  #{usageStauts}, 
							  #{largeCategory},
							  #{middleCategory}, 
							  #{prjId}, 
							  #{rcptNm}, 
							  #{useNm}, 
							  #{orgnztId}, 
							  #{lowerOrgnztId}, 
							  #{assetName}, 
							  #{assetSn}, 
							  #{assetStart}, 
							  #{assetEnd}, 
							  #{maker}, 
							  #{note}, 
							  #{rcptDate},
							  #{creatId},
							  #{assetCompany},
							  #{rcptGroup},
							  #{useGroup}
							  )
  	</select>
	
	<select id="SelectDelReqList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultMap="assetList">
		SELECT 
    		MNG_NUM,
    		ASSET_ID, 
			ORGNZT_NM,
	    	LOWER_ORGNZT_NM, 
			MIDDLE_CATEGORY,
			CREAT_ID,
			REQ_DATE
	      FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM,
				A.ASSET_ID,
				CASE
					WHEN F.ORGNZT_UP IS NULL
					THEN F.ORGNZT_NM
					ELSE G.ORGNZT_NM
			  END AS ORGNZT_NM,
				CASE 
					WHEN F.ORGNZT_UP IS NULL
					THEN NULL
					ELSE F.ORGNZT_NM
			  END AS LOWER_ORGNZT_NM,
				CASE 
					WHEN C.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL AND A.MCAT_ETC != ""
					THEN A.MCAT_ETC
					ELSE C.CAT_NAME
				END AS MIDDLE_CATEGORY, 
				D.USER_NM AS CREAT_ID,
				DATE_FORMAT(B.REQ_DATE, '%Y-%m-%d') AS REQ_DATE
			  FROM ASSET A
   LEFT OUTER JOIN ASSETREQ B
				ON A.ASSET_ID = B.ASSET_ID  
   LEFT OUTER JOIN CATEGORY C
				ON A.MIDDLE_CATEGORY = C.CAT_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO D
	            ON B.CREAT_ID = D.ESNTL_ID
   LEFT OUTER JOIN LETTNORGNZTINFO F
				ON A.ORGNZT_ID = F.ORGNZT_ID
   LEFT OUTER JOIN LETTNORGNZTINFO G
				ON F.ORGNZT_UP = G.ORGNZT_ID
   LEFT OUTER JOIN LETTCCMMNDETAILCODE H
			    ON A.MAKER_CODE = H.CODE
				 <include refid="delreqlistsearch" />
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountDelReqList" parameterType="egovframework.let.res.ass.service.AssetManageVO" resultType="int">
		SELECT 
    		COUNT(P.RUM)
	      FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY A.CREAT_DT DESC)AS RUM,
				A.MNG_NUM,
				A.ASSET_ID
			  FROM ASSET A
   LEFT OUTER JOIN ASSETREQ B
				ON A.ASSET_ID = B.ASSET_ID
   LEFT OUTER JOIN LETTNORGNZTINFO F
				ON A.ORGNZT_ID = F.ORGNZT_ID
				 <include refid="delreqlistsearch" />
		    ) P 
	</select>
</mapper>
